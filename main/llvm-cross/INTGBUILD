packagename = llvm-cross
description = Cross-Compiler LLVM package for bootstrapping artex
version = 19.1.3
depends = llvm-libs
source = https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/llvm-project-$pkgver.src.tar.xz

build:
export CC=clang
export CXX=clang++
export LD=ld.lld
export CFLAGS=-O3 -march=x86-64-v2 -mtune=generic
export CXXFLAGS=-O3 -march=x86-64-v2 -mtune=generic -stdlib=libc++
export LDFLAGS=-O1 -fuse-ld=lld -rtlib=compiler-rt -unwindlib=libunwind -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now
cd $srcdir
bsdtar -xvkf llvm-project-$pkgver.src.tar.xz
cd llvm-project-$pkgver.src
mkdir -p build
cd build
echo Build 1
cmake ../llvm -G Ninja -DLLVM_TARGET_TRIPLE=x86_64-pc-linux-musl -DLLVM_ENABLE_PROJECTS=clang;lldb -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_LINKER=ld.lld -DLLVM_USE_SPLIT_DWARF=ON -DLLVM_ENABLE_LIBCXX=ON -DCMAKE_INSTALL_PREFIX=$srcdir/llvmcross -DLLVM_ENABLE_PIC=ON -DCMAKE_SKIP_RPATH=ON -DLLVM_INCLUDE_TESTS=OFF -DLLDB_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DCLANG_DEFAULT_PIE_ON_LINUX=ON -DCLANG_DEFAULT_CXX_STDLIB=libc++ -DCLANG_DEFAULT_RTLIB=compiler-rt -DLLDB_USE_SYSTEM_DEBUGSERVER=ON -DLLVM_BUILD_DOCS=OFF -DLLVM_ENABLE_OCAML_DOCS=OFF -Wno-dev
ninja all
ninja install
echo Build 2
export CC=$srcdir/llvmcross/bin/clang
export CXX=$srcdir/llvmcross/bin/clang++
cd $srcdir/llvm-project-$pkgver
mkdir -p build2
cd build2
cmake .. -G Ninja -DLLVM_ENABLE_JIT=ON -DLLVM_ENABLE_LIBCXX=ON -DLLVM_BUILD_DOCS=OFF -DLLVM_ENABLE_TARGETS=x86_64
ninja all
export DESTDIR=$pkgdir
ninja install
:end build

package:
:end package
